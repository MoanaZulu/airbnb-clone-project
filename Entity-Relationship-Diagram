alx-airbnb-database/
â”œâ”€â”€ ERD/
â”‚   â””â”€â”€ requirements.md
â”œâ”€â”€ normalization.md
â”œâ”€â”€ database-script-0x01/
â”‚   â”œâ”€â”€ schema.sql
â”‚   â””â”€â”€ README.md
â”œâ”€â”€ database-script-0x02/
â”‚   â”œâ”€â”€ seed.sql
â”‚   â””â”€â”€ README.md
# ðŸ“Š Entity Relationship Diagram (ERD)

## Objective
Design a visual representation of the Airbnb database system using an ERD.

## Entities
- User
- Property
- Booking
- Review
- Payment

## Relationships
- A User can book multiple Properties.
- A Booking links a User to a Property.
- A Review is written by a User for a Property.
- A Payment is tied to a Booking.

## Tool
Use [Draw.io](https://draw.io) or similar to create your ERD and upload the image or link here.

## Submission
Ensure this file is present for manual review.

# ðŸ§  Database Normalization

## Objective
Apply normalization principles to ensure the database is in Third Normal Form (3NF).

## Steps Taken
1. **1NF**: Removed repeating groups and ensured atomicity.
2. **2NF**: Eliminated partial dependencies by separating composite keys.
3. **3NF**: Removed transitive dependencies to isolate non-key attributes.

## Outcome
The final schema ensures:
- Minimal redundancy
- High data integrity
- Efficient querying

-- Airbnb Clone Schema Definition

CREATE TABLE User (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100),
    email VARCHAR(100) UNIQUE,
    password VARCHAR(255),
    role ENUM('guest', 'host')
);

CREATE TABLE Property (
    id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255),
    location VARCHAR(255),
    price_per_night DECIMAL(10,2),
    host_id INT,
    FOREIGN KEY (host_id) REFERENCES User(id)
);

CREATE TABLE Booking (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    property_id INT,
    start_date DATE,
    end_date DATE,
    FOREIGN KEY (user_id) REFERENCES User(id),
    FOREIGN KEY (property_id) REFERENCES Property(id)
);

CREATE TABLE Review (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    property_id INT,
    rating INT,
    comment TEXT,
    FOREIGN KEY (user_id) REFERENCES User(id),
    FOREIGN KEY (property_id) REFERENCES Property(id)
);

CREATE TABLE Payment (
    id INT PRIMARY KEY AUTO_INCREMENT,
    booking_id INT,
    amount DECIMAL(10,2),
    status ENUM('paid', 'pending'),
    method VARCHAR(50),
    FOREIGN KEY (booking_id) REFERENCES Booking(id)
);

# ðŸ§± Database Schema

This folder contains the SQL schema for the Airbnb Clone project.

## Files
- `schema.sql`: Defines tables, keys, and constraints.

## Notes
- All foreign keys are properly linked.
- Indexes can be added for performance optimization.

-- Sample Data for Airbnb Clone

INSERT INTO User (name, email, password, role)
VALUES ('Alice', 'alice@example.com', 'hashed_pw', 'guest'),
       ('Bob', 'bob@example.com', 'hashed_pw', 'host');

INSERT INTO Property (title, location, price_per_night, host_id)
VALUES ('Cozy Cottage', 'Cape Town', 1200.00, 2),
       ('Urban Loft', 'Johannesburg', 950.00, 2);

INSERT INTO Booking (user_id, property_id, start_date, end_date)
VALUES (1, 1, '2025-11-01', '2025-11-05'),
       (1, 2, '2025-12-10', '2025-12-15');

INSERT INTO Review (user_id, property_id, rating, comment)
VALUES (1, 1, 5, 'Amazing stay!'),
       (1, 2, 4, 'Great location.');

INSERT INTO Payment (booking_id, amount, status, method)
VALUES (1, 4800.00, 'paid', 'card'),
       (2, 4750.00, 'paid', 'paypal');

# ðŸ’¾ Database Seeding

This folder contains SQL scripts to populate the Airbnb Clone database with sample data.

## Files
- `seed.sql`: Inserts realistic data for testing and demonstration.

## Notes
- Data reflects real-world usage scenarios.
- Useful for testing queries and relationships.
